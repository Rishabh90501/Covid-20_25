<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0520.1026                               -->
<workbook original-version='18.1' source-build='2025.1.2 (20251.25.0520.1026)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Covid Death Count (Covid Death Count)' inline='true' name='federated.1nfu9cv0wez1yj10a08e91bjqh7q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Death Count' name='excel-direct.07r5ehn0gcx0jk128axgm0c9hlha'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/cereb/OneDrive/Desktop/Rishabh/Projects/Covid/SQL Script/Covid Death Count.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.07r5ehn0gcx0jk128axgm0c9hlha' name='Covid Death Count' table='[&apos;Covid Death Count$&apos;]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='Continent' ordinal='0' />
            <column datatype='integer' name='Total_Death_Count' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid Death Count]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Covid Death Count]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Covid Death Count_1D5B0E8AAF7E4848AD23830A5E13315F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Death_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Death_Count]</local-name>
            <parent-name>[Covid Death Count]</parent-name>
            <remote-alias>Total_Death_Count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Covid Death Count_1D5B0E8AAF7E4848AD23830A5E13315F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Total Death Count' datatype='integer' name='[Total_Death_Count]' role='measure' type='quantitative' />
      <column caption='Covid Death Count' datatype='table' name='[__tableau_internal_object_id__].[Covid Death Count_1D5B0E8AAF7E4848AD23830A5E13315F]' role='measure' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/cereb/AppData/Local/Temp/TableauTemp/#TableauTemp_1frjxrb0k7e4ix12ekwtl1yqla7e.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/01/2025 10:02:11 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Covid Death Count</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Covid Death Count_1D5B0E8AAF7E4848AD23830A5E13315F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total_Death_Count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total_Death_Count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total_Death_Count</remote-alias>
              <ordinal>1</ordinal>
              <family>Covid Death Count</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Covid Death Count_1D5B0E8AAF7E4848AD23830A5E13315F]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Covid Death Count' id='Covid Death Count_1D5B0E8AAF7E4848AD23830A5E13315F'>
            <properties context=''>
              <relation connection='excel-direct.07r5ehn0gcx0jk128axgm0c9hlha' name='Covid Death Count' table='[&apos;Covid Death Count$&apos;]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='Continent' ordinal='0' />
                  <column datatype='integer' name='Total_Death_Count' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Covid Death Percentage (Covid Death Percentage)' inline='true' name='federated.138srku1nnqpmg1d99y1e0xbppfi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Death Percentage' name='excel-direct.1l2db760y9t9jz1blhsfb1epua3x'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/cereb/OneDrive/Desktop/Rishabh/Projects/Covid/SQL Script/Covid Death Percentage.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1l2db760y9t9jz1blhsfb1epua3x' name='Covid Death Percentage' table='[&apos;Covid Death Percentage$&apos;]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='Death_Percentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid Death Percentage]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Covid Death Percentage]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Covid Death Percentage_6BD5AB0720E54B0FB3EF01256C416580]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Covid Death Percentage]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Covid Death Percentage_6BD5AB0720E54B0FB3EF01256C416580]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death_Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death_Percentage]</local-name>
            <parent-name>[Covid Death Percentage]</parent-name>
            <remote-alias>Death_Percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Covid Death Percentage_6BD5AB0720E54B0FB3EF01256C416580]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[Death_Percentage]' role='measure' type='quantitative' />
      <column caption='Covid Death Percentage' datatype='table' name='[__tableau_internal_object_id__].[Covid Death Percentage_6BD5AB0720E54B0FB3EF01256C416580]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/cereb/AppData/Local/Temp/TableauTemp/#TableauTemp_04ycuir0xa412o1ghk0eq0bbfc6u.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/01/2025 10:02:20 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Covid Death Percentage</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Covid Death Percentage_6BD5AB0720E54B0FB3EF01256C416580]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Covid Death Percentage</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Covid Death Percentage_6BD5AB0720E54B0FB3EF01256C416580]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Death_Percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Death_Percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Death_Percentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Covid Death Percentage</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Covid Death Percentage_6BD5AB0720E54B0FB3EF01256C416580]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Covid Death Percentage' id='Covid Death Percentage_6BD5AB0720E54B0FB3EF01256C416580'>
            <properties context=''>
              <relation connection='excel-direct.1l2db760y9t9jz1blhsfb1epua3x' name='Covid Death Percentage' table='[&apos;Covid Death Percentage$&apos;]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='Death_Percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Covid Infection Count (Covid Infection Count)' inline='true' name='federated.0927cfj0gyexof1417n2o1ibjuuh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Infection Count' name='excel-direct.0xvrt7m0s626zp150p6n61ky4pi9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/cereb/OneDrive/Desktop/Rishabh/Projects/Covid/SQL Script/Covid Infection Count.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Covid Infected Population' name='excel-direct.0zihi9c1u4ztzz1bpql0q1957j9p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/cereb/OneDrive/Desktop/Rishabh/Projects/Covid/SQL Script/Covid Infected Population.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.0xvrt7m0s626zp150p6n61ky4pi9' name='Covid Infection Count' table='[&apos;Covid Infection Count$&apos;]' type='table'>
            <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
              <column datatype='string' name='Location' ordinal='0' />
              <column datatype='integer' name='Population' ordinal='1' />
              <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
              <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0zihi9c1u4ztzz1bpql0q1957j9p' name='Covid Infected Population' table='[&apos;Covid Infected Population$&apos;]' type='table'>
            <columns gridOrigin='A1:E2001:no:A1:E2001:0' header='yes' outcome='6'>
              <column datatype='string' name='Location' ordinal='0' />
              <column datatype='integer' name='Population' ordinal='1' />
              <column datatype='date' name='Date_' ordinal='2' />
              <column datatype='integer' name='Highest_Infection_Count' ordinal='3' />
              <column datatype='real' name='Percent_Population_Infected' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Date_]' value='[Covid Infected Population].[Date_]' />
          <map key='[Highest_Infection_Count (Covid Infected Population)]' value='[Covid Infected Population].[Highest_Infection_Count]' />
          <map key='[Highest_Infection_Count]' value='[Covid Infection Count].[Highest_Infection_Count]' />
          <map key='[Location (Covid Infected Population)]' value='[Covid Infected Population].[Location]' />
          <map key='[Location]' value='[Covid Infection Count].[Location]' />
          <map key='[Percent_Population_Infected (Covid Infected Population)]' value='[Covid Infected Population].[Percent_Population_Infected]' />
          <map key='[Percent_Population_Infected]' value='[Covid Infection Count].[Percent_Population_Infected]' />
          <map key='[Population (Covid Infected Population)]' value='[Covid Infected Population].[Population]' />
          <map key='[Population]' value='[Covid Infection Count].[Population]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid Infection Count]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D239:no:A1:D239:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Covid Infection Count]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Covid Infection Count]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection_Count]</local-name>
            <parent-name>[Covid Infection Count]</parent-name>
            <remote-alias>Highest_Infection_Count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_Population_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_Population_Infected]</local-name>
            <parent-name>[Covid Infection Count]</parent-name>
            <remote-alias>Percent_Population_Infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location (Covid Infected Population)]</local-name>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (Covid Infected Population)]</local-name>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date_]</local-name>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias>Date_</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection_Count (Covid Infected Population)]</local-name>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias>Highest_Infection_Count</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_Population_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_Population_Infected (Covid Infected Population)]</local-name>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias>Percent_Population_Infected</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
      <column caption='Highest Infection Count (Covid Infected Population)' datatype='integer' name='[Highest_Infection_Count (Covid Infected Population)]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[Highest_Infection_Count]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected (Covid Infected Population)' datatype='real' name='[Percent_Population_Infected (Covid Infected Population)]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
      <column caption='Covid Infected Population' datatype='table' name='[__tableau_internal_object_id__].[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]' role='measure' type='quantitative' />
      <column caption='Covid Infection Count' datatype='table' name='[__tableau_internal_object_id__].[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]' role='measure' type='quantitative' />
      <column-instance column='[Date_]' derivation='Month-Trunc' name='[tmn:Date_:ok]' pivot='key' type='ordinal' />
      <group caption='Action (MONTH(Date),Location)' hidden='true' name='[Action (MONTH(Date),Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Date_:ok]' />
          <groupfilter function='level-members' level='[Location]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/cereb/AppData/Local/Temp/TableauTemp/#TableauTemp_0163ylj0l2273m1ayoy2e1x3osvb.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='07/01/2025 11:10:41 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15' table='[Extract].[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]' type='table' />
            <relation name='Covid Infected Population_1C44E338A0614A639BF51E665F75D817' table='[Extract].[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]' type='table' />
          </relation>
          <cols>
            <map key='[Date_]' value='[Covid Infected Population_1C44E338A0614A639BF51E665F75D817].[Date_]' />
            <map key='[Highest_Infection_Count (Covid Infected Population)]' value='[Covid Infected Population_1C44E338A0614A639BF51E665F75D817].[Highest_Infection_Count]' />
            <map key='[Highest_Infection_Count]' value='[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15].[Highest_Infection_Count]' />
            <map key='[Location (Covid Infected Population)]' value='[Covid Infected Population_1C44E338A0614A639BF51E665F75D817].[Location]' />
            <map key='[Location]' value='[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15].[Location]' />
            <map key='[Percent_Population_Infected (Covid Infected Population)]' value='[Covid Infected Population_1C44E338A0614A639BF51E665F75D817].[Percent_Population_Infected]' />
            <map key='[Percent_Population_Infected]' value='[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15].[Percent_Population_Infected]' />
            <map key='[Population (Covid Infected Population)]' value='[Covid Infected Population_1C44E338A0614A639BF51E665F75D817].[Population]' />
            <map key='[Population]' value='[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15].[Population]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='Covid Infection Count (Covid Infection Count)' increment-value='%null%' refresh-type='create' rows-inserted='469214' timestamp-start='2025-07-01 11:10:31.525' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Covid Infection Count</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Covid Infection Count</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highest_Infection_Count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Highest_Infection_Count]</local-name>
              <parent-name>[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]</parent-name>
              <remote-alias>Highest_Infection_Count</remote-alias>
              <ordinal>2</ordinal>
              <family>Covid Infection Count</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percent_Population_Infected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percent_Population_Infected]</local-name>
              <parent-name>[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]</parent-name>
              <remote-alias>Percent_Population_Infected</remote-alias>
              <ordinal>3</ordinal>
              <family>Covid Infection Count</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>215</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location (Covid Infected Population)]</local-name>
              <parent-name>[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>4</ordinal>
              <family>Covid Infected Population</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>237</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population (Covid Infected Population)]</local-name>
              <parent-name>[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>5</ordinal>
              <family>Covid Infected Population</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>237</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date_</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date_]</local-name>
              <parent-name>[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]</parent-name>
              <remote-alias>Date_</remote-alias>
              <ordinal>6</ordinal>
              <family>Covid Infected Population</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>11057</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highest_Infection_Count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Highest_Infection_Count (Covid Infected Population)]</local-name>
              <parent-name>[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]</parent-name>
              <remote-alias>Highest_Infection_Count</remote-alias>
              <ordinal>7</ordinal>
              <family>Covid Infected Population</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48771</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percent_Population_Infected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percent_Population_Infected (Covid Infected Population)]</local-name>
              <parent-name>[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]</parent-name>
              <remote-alias>Percent_Population_Infected</remote-alias>
              <ordinal>8</ordinal>
              <family>Covid Infected Population</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11136</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Covid Infected Population' id='Covid Infected Population_1C44E338A0614A639BF51E665F75D817'>
            <properties context=''>
              <relation connection='excel-direct.0zihi9c1u4ztzz1bpql0q1957j9p' name='Covid Infected Population' table='[&apos;Covid Infected Population$&apos;]' type='table'>
                <columns gridOrigin='A1:E2001:no:A1:E2001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='Date_' ordinal='2' />
                  <column datatype='integer' name='Highest_Infection_Count' ordinal='3' />
                  <column datatype='real' name='Percent_Population_Infected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Covid Infected Population_1C44E338A0614A639BF51E665F75D817' table='[Extract].[Covid Infected Population_1C44E338A0614A639BF51E665F75D817]' type='table' />
            </properties>
          </object>
          <object caption='Covid Infection Count' id='Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15'>
            <properties context=''>
              <relation connection='excel-direct.0xvrt7m0s626zp150p6n61ky4pi9' name='Covid Infection Count' table='[&apos;Covid Infection Count$&apos;]' type='table'>
                <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
                  <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15' table='[Extract].[Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Location]' />
              <expression op='[Location (Covid Infected Population)]' />
            </expression>
            <first-end-point object-id='Covid Infection Count_EC48FC8CC5334B94BDCE7E46F4F26C15' />
            <second-end-point object-id='Covid Infected Population_1C44E338A0614A639BF51E665F75D817' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
    <datasource caption='Covid Infected Population (Covid Infected Population)' inline='true' name='federated.1aa8fnc1j9r7v71b2rip818tl714' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid_Infected_Population' name='excel-direct.0uey96c1fx18f41e6ooq11kypa5c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/cereb/OneDrive/Desktop/Rishabh/Projects/Covid/SQL Script/Covid_Infected_Population.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0uey96c1fx18f41e6ooq11kypa5c' name='Covid Infected Population' table='[&apos;Covid Infected Population$&apos;]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='Date_' ordinal='2' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='3' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date_]</local-name>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias>Date_</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection_Count]</local-name>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias>Highest_Infection_Count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_Population_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_Population_Infected]</local-name>
            <parent-name>[Covid Infected Population]</parent-name>
            <remote-alias>Percent_Population_Infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
      <column caption='Highest Infection Count' datatype='integer' name='[Highest_Infection_Count]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
      <column caption='Covid Infected Population' datatype='table' name='[__tableau_internal_object_id__].[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]' role='measure' type='quantitative' />
      <column-instance column='[Percent_Population_Infected]' derivation='Avg' name='[avg:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent_Population_Infected]' derivation='Max' name='[max:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Highest_Infection_Count]' derivation='Sum' name='[sum:Highest_Infection_Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent_Population_Infected]' derivation='Sum' name='[sum:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date_]' derivation='Month-Trunc' name='[tmn:Date_:ok]' pivot='key' type='ordinal' />
      <group caption='Action (MONTH(Date),Location)' hidden='true' name='[Action (MONTH(Date),Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Date_:ok]' />
          <groupfilter function='level-members' level='[Location]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/cereb/AppData/Local/Temp/TableauTemp/#TableauTemp_1mpo0ev0c86emh197c2hn1in3lns.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='07/01/2025 11:38:15 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Covid Infected Population (Covid Infected Population)' increment-value='%null%' refresh-type='create' rows-inserted='468975' timestamp-start='2025-07-01 11:38:06.329' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Covid Infected Population</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>249</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Covid Infected Population</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>249</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date_</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date_</remote-alias>
              <ordinal>2</ordinal>
              <family>Covid Infected Population</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10526</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highest_Infection_Count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Highest_Infection_Count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Highest_Infection_Count</remote-alias>
              <ordinal>3</ordinal>
              <family>Covid Infected Population</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52741</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percent_Population_Infected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percent_Population_Infected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percent_Population_Infected</remote-alias>
              <ordinal>4</ordinal>
              <family>Covid Infected Population</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11885</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Covid Infected Population_2A13A937295C40F4B33734F2C2092E71]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1aa8fnc1j9r7v71b2rip818tl714].[sum:Highest_Infection_Count:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1aa8fnc1j9r7v71b2rip818tl714]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1aa8fnc1j9r7v71b2rip818tl714].[avg:Percent_Population_Infected:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1aa8fnc1j9r7v71b2rip818tl714].[max:Percent_Population_Infected:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1aa8fnc1j9r7v71b2rip818tl714].[sum:Percent_Population_Infected:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]' palette='tableau-10' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Covid Infected Population' id='Covid Infected Population_2A13A937295C40F4B33734F2C2092E71'>
            <properties context=''>
              <relation connection='excel-direct.0uey96c1fx18f41e6ooq11kypa5c' name='Covid Infected Population' table='[&apos;Covid Infected Population$&apos;]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='Date_' ordinal='2' />
                  <column datatype='integer' name='Highest_Infection_Count' ordinal='3' />
                  <column datatype='real' name='Percent_Population_Infected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1aa8fnc1j9r7v71b2rip818tl714'>
      <datasources>
        <datasource caption='Covid Infected Population (Covid Infected Population)' name='federated.1aa8fnc1j9r7v71b2rip818tl714' />
      </datasources>
      <datasource-dependencies datasource='federated.1aa8fnc1j9r7v71b2rip818tl714'>
        <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
        <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([Percent_Population_Infected])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Location:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_D28DA595138F4AF29D579ED1D5A476DE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Death Percentage (Covid Death Percentage)' name='federated.138srku1nnqpmg1d99y1e0xbppfi' />
          </datasources>
          <datasource-dependencies datasource='federated.138srku1nnqpmg1d99y1e0xbppfi'>
            <column caption='Death Percentage' datatype='real' name='[Death_Percentage]' role='measure' type='quantitative' />
            <column-instance column='[Death_Percentage]' derivation='Sum' name='[sum:Death_Percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.138srku1nnqpmg1d99y1e0xbppfi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.138srku1nnqpmg1d99y1e0xbppfi].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.138srku1nnqpmg1d99y1e0xbppfi].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.138srku1nnqpmg1d99y1e0xbppfi].[sum:Death_Percentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.138srku1nnqpmg1d99y1e0xbppfi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.138srku1nnqpmg1d99y1e0xbppfi].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.138srku1nnqpmg1d99y1e0xbppfi].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.138srku1nnqpmg1d99y1e0xbppfi].[sum:Death_Percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.138srku1nnqpmg1d99y1e0xbppfi].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.138srku1nnqpmg1d99y1e0xbppfi].[:Measure Names]' value='149' />
            <format attr='height' value='31' />
            <format attr='text-format' field='[federated.138srku1nnqpmg1d99y1e0xbppfi].[sum:total_cases:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='text-format' field='[federated.138srku1nnqpmg1d99y1e0xbppfi].[sum:total_deaths:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='text-format' field='[federated.138srku1nnqpmg1d99y1e0xbppfi].[sum:Death_Percentage:qk]' value='n#,##0.00&quot; %&quot;;-#,##0.00&quot; %&quot;' />
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Tw Cen MT Condensed Extra Bold' />
            <format attr='vertical-align' value='center' />
            <format attr='color' value='#f17b79' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#499894' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.138srku1nnqpmg1d99y1e0xbppfi].[sum:Death_Percentage:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='text-align' value='center' />
            <format attr='text-decoration' value='none' />
            <format attr='font-style' value='normal' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
            <format attr='vertical-align' value='center' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000066' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#000066' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#ffffffc1' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.138srku1nnqpmg1d99y1e0xbppfi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.138srku1nnqpmg1d99y1e0xbppfi].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{50E26792-E54E-463C-B83B-DF7CC2ADF1EB}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Death Count (Covid Death Count)' name='federated.1nfu9cv0wez1yj10a08e91bjqh7q' />
          </datasources>
          <datasource-dependencies datasource='federated.1nfu9cv0wez1yj10a08e91bjqh7q'>
            <column datatype='string' name='[Continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Total Death Count' datatype='integer' name='[Total_Death_Count]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total_Death_Count]' derivation='Sum' name='[sum:Total_Death_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nfu9cv0wez1yj10a08e91bjqh7q].[none:Continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nfu9cv0wez1yj10a08e91bjqh7q].[sum:Total_Death_Count:qk]' field-type='quantitative' major-origin='0' major-spacing='500000' max='2214305' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nfu9cv0wez1yj10a08e91bjqh7q].[sum:Total_Death_Count:qk]' scope='rows' value='Death Count' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nfu9cv0wez1yj10a08e91bjqh7q].[none:Continent:nk]' value='135' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nfu9cv0wez1yj10a08e91bjqh7q].[none:Continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nfu9cv0wez1yj10a08e91bjqh7q].[sum:Total_Death_Count:qk]</rows>
        <cols>[federated.1nfu9cv0wez1yj10a08e91bjqh7q].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{CB3B4655-30BC-48E8-98C8-4836A7BA744B}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#499894' fontname='Tw Cen MT Condensed Extra Bold' fontsize='20'>Infected Population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Infection Count (Covid Infection Count)' name='federated.0927cfj0gyexof1417n2o1ibjuuh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0927cfj0gyexof1417n2o1ibjuuh'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent_Population_Infected]' derivation='Sum' name='[sum:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0927cfj0gyexof1417n2o1ibjuuh].[Longitude (generated)]' field-type='quantitative' max='25943743.372480839' min='-12869497.815901637' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0927cfj0gyexof1417n2o1ibjuuh].[Latitude (generated)]' field-type='quantitative' max='11831813.73186711' min='-6747639.9505324131' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0927cfj0gyexof1417n2o1ibjuuh].[sum:Percent_Population_Infected:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f1e5e5</color>
                <color>#f1d9d9</color>
                <color>#f1cdcd</color>
                <color>#f1c1c1</color>
                <color>#f1b6b5</color>
                <color>#f1aaa9</color>
                <color>#f19e9d</color>
                <color>#f19291</color>
                <color>#f18685</color>
                <color>#f17b79</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0927cfj0gyexof1417n2o1ibjuuh].[none:Location:nk]' />
              <color column='[federated.0927cfj0gyexof1417n2o1ibjuuh].[sum:Percent_Population_Infected:qk]' />
              <geometry column='[federated.0927cfj0gyexof1417n2o1ibjuuh].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#499894' fontname='Segoe UI Semibold'>&lt;</run>
                <run fontcolor='#499894' fontname='Segoe UI Semibold'>[federated.0927cfj0gyexof1417n2o1ibjuuh].[none:Location:nk]</run>
                <run fontcolor='#499894' fontname='Segoe UI Semibold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0927cfj0gyexof1417n2o1ibjuuh].[Latitude (generated)]</rows>
        <cols>[federated.0927cfj0gyexof1417n2o1ibjuuh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{49925C37-3683-4260-993A-3760C55A5C74}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Infected Country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Infected Population (Covid Infected Population)' name='federated.1aa8fnc1j9r7v71b2rip818tl714' />
          </datasources>
          <datasource-dependencies datasource='federated.1aa8fnc1j9r7v71b2rip818tl714'>
            <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
            <column-instance column='[Percent_Population_Infected]' derivation='Max' name='[max:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_]' derivation='Month' name='[mn:Date_:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_]' derivation='Year' name='[yr:Date_:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aa8fnc1j9r7v71b2rip818tl714].[mn:Date_:ok]'>
            <groupfilter function='level-members' level='[mn:Date_:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aa8fnc1j9r7v71b2rip818tl714].[yr:Date_:ok]'>
            <groupfilter function='level-members' level='[yr:Date_:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]</column>
            <column>[federated.1aa8fnc1j9r7v71b2rip818tl714].[yr:Date_:ok]</column>
            <column>[federated.1aa8fnc1j9r7v71b2rip818tl714].[mn:Date_:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1aa8fnc1j9r7v71b2rip818tl714].[max:Percent_Population_Infected:qk]' value='n#,##0.00&quot; %&quot;;-#,##0.00&quot; %&quot;' />
            <format attr='color' value='#333333' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1aa8fnc1j9r7v71b2rip818tl714].[max:Percent_Population_Infected:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1aa8fnc1j9r7v71b2rip818tl714].[max:Percent_Population_Infected:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dce8e7</color>
                <color>#c7dfde</color>
                <color>#b4d6d4</color>
                <color>#a2cdcb</color>
                <color>#91c4c1</color>
                <color>#81bbb8</color>
                <color>#71b2af</color>
                <color>#63a9a6</color>
                <color>#55a09d</color>
                <color>#499894</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1aa8fnc1j9r7v71b2rip818tl714].[mn:Date_:ok]' value='MONTH'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#499894' fontname='Tw Cen MT Condensed Extra Bold' fontsize='15'>MONTH</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1aa8fnc1j9r7v71b2rip818tl714].[yr:Date_:ok]' value='YEAR'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#499894' fontname='Tw Cen MT Condensed Extra Bold' fontsize='15'>YEAR</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' value='LOCATION'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#499894' fontname='Tw Cen MT Condensed Extra Bold' fontsize='15'>LOCATION</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1aa8fnc1j9r7v71b2rip818tl714].[max:Percent_Population_Infected:qk]' />
              <color column='[federated.1aa8fnc1j9r7v71b2rip818tl714].[max:Percent_Population_Infected:qk]' />
              <text column='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' />
              <text column='[federated.1aa8fnc1j9r7v71b2rip818tl714].[max:Percent_Population_Infected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CDB659C4-4222-4ACB-9247-91C746C7531C}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid Infected Population (Covid Infected Population)' name='federated.1aa8fnc1j9r7v71b2rip818tl714' />
          </datasources>
          <datasource-dependencies datasource='federated.1aa8fnc1j9r7v71b2rip818tl714'>
            <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent_Population_Infected]' derivation='Sum' name='[sum:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_]' derivation='Month-Trunc' name='[tmn:Date_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1aa8fnc1j9r7v71b2rip818tl714].[tmn:Date_:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1aa8fnc1j9r7v71b2rip818tl714].[sum:Percent_Population_Infected:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' />
              <lod column='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='auto' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1aa8fnc1j9r7v71b2rip818tl714].[sum:Percent_Population_Infected:qk]</rows>
        <cols>[federated.1aa8fnc1j9r7v71b2rip818tl714].[tmn:Date_:qk]</cols>
      </table>
      <simple-id uuid='{CFE94339-DB4A-4A5D-9527-EC33D3D1A065}' />
    </worksheet>
    <worksheet name='Title'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#499894' fontname='Tw Cen MT Condensed Extra Bold' fontsize='24'>COVID REPORT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{318D06A6-CB84-4F6F-80D6-DD6E30F26D1F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Covid Infected Population (Covid Infected Population)' name='federated.1aa8fnc1j9r7v71b2rip818tl714' />
      </datasources>
      <datasource-dependencies datasource='federated.1aa8fnc1j9r7v71b2rip818tl714'>
        <column caption='Date' datatype='date' name='[Date_]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[Date_]' derivation='Month' name='[mn:Date_:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date_]' derivation='Year' name='[yr:Date_:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='9229' id='3' name='Sheet 1' w='26565' x='995' y='8528' />
        <zone h='6425' id='4' name='Title' w='30369' x='761' y='2687' />
        <zone h='26752' id='5' name='Sheet 2' w='35752' x='62844' y='25234' />
        <zone h='77804' id='6' name='Sheet 3' w='61205' x='761' y='20093' />
        <zone h='44977' id='7' name='Sheet 4' w='36220' x='62785' y='53271' />
        <zone h='5257' id='8' mode='typeinlist' name='Sheet 4' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[mn:Date_:ok]' type-v2='filter' values='relevant' w='7782' x='89994' y='-234' />
        <zone h='5140' id='9' mode='typeinlist' name='Sheet 4' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[yr:Date_:ok]' type-v2='filter' w='9362' x='80515' y='-234' />
        <zone h='5841' id='10' mode='typeinlist' name='Sheet 4' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' type-v2='filter' w='9362' x='71153' y='-234' />
        <zone h='15888' id='11' name='Sheet 5' w='69865' x='28438' y='7827' />
        <zone h='5257' id='13' name='Sheet 5' pane-specification-id='0' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' type-v2='color' w='40374' x='28789' y='1168' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98130' id='16' param='vert' type-v2='layout-flow' w='99064' x='468' y='935'>
                <zone fixed-size='52' h='6425' id='4' is-fixed='true' name='Title' w='30369' x='761' y='2687'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='127' h='15888' id='11' is-fixed='true' name='Sheet 5' w='69865' x='28438' y='7827'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5257' id='13' name='Sheet 5' pane-specification-id='0' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' type-v2='color' w='40374' x='28789' y='1168'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='74' h='9229' id='3' is-fixed='true' name='Sheet 1' w='26565' x='995' y='8528'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77804' id='6' is-fixed='true' name='Sheet 3' w='61205' x='761' y='20093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='214' h='26752' id='5' is-fixed='true' name='Sheet 2' w='35752' x='62844' y='25234'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5257' id='8' mode='checkdropdown' name='Sheet 4' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[mn:Date_:ok]' type-v2='filter' values='relevant' w='7782' x='89994' y='-234'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5140' id='9' mode='checkdropdown' name='Sheet 4' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[yr:Date_:ok]' type-v2='filter' w='9362' x='80515' y='-234'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5841' id='10' mode='checkdropdown' name='Sheet 4' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' type-v2='filter' w='9362' x='71153' y='-234'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44977' id='7' is-fixed='true' name='Sheet 4' w='36220' x='62785' y='53271'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C32B447F-ECD0-46E7-BBC2-A1A5030C3D20}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Title'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C20A7430-0DA6-444C-B1C8-3AC4C90B9301}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.138srku1nnqpmg1d99y1e0xbppfi].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80F433AB-68A8-4827-8416-78D5F8B85096}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nfu9cv0wez1yj10a08e91bjqh7q].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C64B412A-3777-4DE8-B00B-F0D666EF0E81}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0927cfj0gyexof1417n2o1ibjuuh].[sum:Percent_Population_Infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0927cfj0gyexof1417n2o1ibjuuh].[sum:Percent_Population_Infected:qk]</field>
            <field>[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]</field>
            <field>[federated.1nfu9cv0wez1yj10a08e91bjqh7q].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5E602BAD-E923-4DF0-BC70-726735B19AFF}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[mn:Date_:ok]' type='filter' values='relevant' />
            <card mode='typeinlist' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[yr:Date_:ok]' type='filter' />
            <card mode='typeinlist' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[max:Percent_Population_Infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0927cfj0gyexof1417n2o1ibjuuh].[none:Location:nk]</field>
            <field>[federated.1aa8fnc1j9r7v71b2rip818tl714].[:Measure Names]</field>
            <field>[federated.1aa8fnc1j9r7v71b2rip818tl714].[max:Percent_Population_Infected:qk]</field>
            <field>[federated.1aa8fnc1j9r7v71b2rip818tl714].[mn:Date_:ok]</field>
            <field>[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location (Covid Infection Count):nk]</field>
            <field>[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]</field>
            <field>[federated.1aa8fnc1j9r7v71b2rip818tl714].[tmn:Date_:ok]</field>
            <field>[federated.1aa8fnc1j9r7v71b2rip818tl714].[yr:Date_:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6388264-3F24-4BB0-9EF0-9C4DF04B0856}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aa8fnc1j9r7v71b2rip818tl714].[none:Location:nk]</field>
            <field>[federated.1aa8fnc1j9r7v71b2rip818tl714].[yr:Date_:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8264DD2-7DDD-4807-92A2-885E146706C9}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4' />
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Title' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AAFEB386-DFB1-4812-8485-7486CBBD261C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='55' name='Sheet 1' width='192'>
      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
      gaX5P9MJHSPAtBocAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALIUlEQVR4nO3a2W8b536H8Wc2UtwpUrIWW157fJbksi1Q9Pqg/X/7N/SiB0hb2EFOIPvE
      tizF2rivw1neXih2I4VB0iISLf2+nxuRwyHwo6iHM+9QnnPOIWKUv+oBRFZJAYhp4Y/v/Pt3
      f+Pr4+9XNYtc8aS9QbtaXfUYd9qlAF58OOLfvn65qlnkin9+8own9+6teow7TadAYtrSANJe
      n/j9IS5Jf/aJeRyjC0g3I8sy3rz8mnGvf2n7fDplMZsxm0wAGHa79I5PyPN8FWPeSuGyjfli
      gUtTkk4HzwOvuEY+HpMvFnhhSHp2TuHhHuFG+6bnNckDnMsZdbscv31LEIbUWuv0T08p1+oM
      Ox22nz5h3OuRZzmT4YAkXpDnGS539E9PaWxukGc5v/+Hv1/1y/msLA3Aj0JcEOAXIoJ6ncXh
      EV6xSLS9RT4aE21v4QXBTc9qlnOOIAzJXY7v+xTW1jg/POLewz2SeMGD588BqLVaJPGCeDol
      iEJaG9ssZjNKtSpZkuD5OuO9amkAYatF2Gp9ul98/OjT7aBcvv6p5JIgDHn0pz+teow7aelH
      Qj6bkQ4GuDQl++H8Mp/NyRcJ2XSKS1Ncml6sA9LsRge2yDnHZDAgiWNGvR5ZkhDPZnQ/fCBZ
      LBh2OjjnGPf7ZGmqNcD/wdIjAEFANhyTDUcEtYvr0MnJKXgXb4YfRXiFAvl0il+tELZaeJ53
      k3ObkqUpR69esXH/Af2zM/Z+/xw/CBj3B0wGA8JCkXK9zpuXX9Pa3mJzb4/C2tqqx74Vlh4B
      PN8nqFyc6qTdHi7PCVpNyHPCRgOXZYTrTby1NdJOj3w2u9GhrXF5jnOO04MD8iyj++EDYRhS
      WFsjiApMBgMWsxk7T58QT2ccv3276pFvjeVHACBoNvCrVfL5DJdeXA6NdnfJp1MKuzsQBESt
      dYJSCb9UurGBLQoLBe49fEil0WTU61JtNknTlPbuDn4Y0j85oVSrERWL1FotsiRZ9ci3xtIA
      vPBis1fw8QsRAH6hcPGzWPjfHaOIIIqueUTxPI/1rS0A2js7P3m8vbsLQFQsXmzQB9Kvputi
      YpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMA
      YpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMA
      YpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMA
      YpoCENMUgJimAMS0cNUDyM8LfI8H9caqx7jTFMBnLHeO8+lk1WPcaZcCaJcrPGm1VzWLXLFR
      qa56hDvvUgCe7+MHwapmkSs8/2KJ5pzj3V+/pbHRJs8y2js7n/aZTSbgHKXqRSyz8YRStbKS
      eW+jSwHEacoojlc1i1wxT5KLG84xHvTxPA8/8PnmP/7C7rOnFIpr9E5P2bi/y/G7d4BHqVLh
      6PVrPN+nsbFB/+yMw1ev+Md//RfKVR1Rrlq6BnDOfbrted7S7Vcfk2vkeWzu3idJFvi+z9bD
      PaJCgb3nvyNZxIRRRPnePQCSxQLP98nzjO7xMVGxwN7z50RRtOIX8XlaGsDk/SF4UGg08PwA
      l2d4fkCeJCSjEYvBgNrjR+RJSlgpk83meEFAFs+JanXS2ZRis3nTr+XO8jyPrUcPlz729Msv
      f7Jt8/594umMYrl03aPdeku/B1jb3CCPF8SdLpODA5LRmHQ8xgt8XJYRRAUWwxHjgwNmH45x
      zjE/OyNPUqZHR6SjMXma3vRrubOcc4z7fRbzOd2TE5J4QZ5lDDodFnHM4LyDc45Rr0+WpuR5
      rj/+X2npESBPUqJqFS8Kieo1osrFosrzA7zNDQBc7vA8j8J6Ez8M8aMQv1AgjxekkwmeFtO/
      mSxNeb//iu3Hj+keH1NbX+fk4D3jfp/m5ibdk2OK5RJ/e/GC9s429x4+pLi2tuqxb4WlARTq
      NajXlj7BL0SX9/u4/YdzzKBQIKppsfVbcnmOc47Oh+8JwpDu8QntnW0GnXPwIPzhd3//2VP6
      5+ccv3nDoz/+ccVT3w5LA4h7PRa9PpW9B8zPO5R3tpmdnoKDqF4jm83wo4hsHhOUS5+OEHI9
      wkKB7cePqNTr9M/OWb+3SZambOzep1Kv4ZyjWCrhb25Sb7dJP149kl+0NIDi+jpZHLPoD8gX
      CwAK9TqL4Yi427tYCzhYDAZ4oxHBwz38UF8qXxfP82htbQGw9XDv0/aP1/4//iwUiwAUSzr/
      /7WWLoLT2YyoUiFPU5LhiHQ2Y3zwHpeluCQhHU8ottYpttbJk4RcnzhySy392A5/+ASJajXK
      O9sANJ7/7if7FVstiq3WNY4ncr3079BimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ
      0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ
      0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ
      0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBiWrjqAeTnhb7P4+b6qse40xTAZyx3jsF8tuox7jSd
      Aolpl44A66USe83mqmaRK1rlCgBZmrL/4iXNjTa1RoNqo7F0f+ccs8mEcrV6k2PeapcC2Gk0
      +fL+g1XNIlfs1uqkWYrn+3i+x2IeczI64u3+PkEY0mi1ebe/T6lcxg8Cmu02aZqw/+Il//Tn
      P9Noaf3wSy4FkOY5cZquaha5IskyPCDPc3w/IAgDiuUSi0XM9t4ek+GIrQf3KZUrlGtVsixj
      PBiw9+wZnu+tevxbwXPOuY93/vL+gG/PTvm4yfP0S1ylB/UGHu6Xd5T/t6WL4MVsxuuvviKZ
      xyRxzHQ4pH96ypsXL5lPJgzPO4y6PTpHR/yoH7kmzjk6p6fMp1Om4zHpD0fp0WBAPJtx+N13
      5FnG+ckJyWJBnmUrnvj2WBrA+dER88mU4zdvOD88pHd8wmQwYK1SpnN0BED3w/cc7u8Tz3SZ
      7rqlScLBq9fkec7+i5fMxmOSJOGbr/6T48ND8Dxy5/jum284eP2aud6TX23p9wCt7W22Hj1i
      Mhgy7nWpNNfB5SzimMbmJoVSCc/3iApFoii66ZlNCsKAb//rv0mSBcNen0G3R5am+H5A7+yc
      9r17PPnDHzg/Pub7d+/4uy++WPXIt8LSNYB8Hj6uAZxzDHs9ytUqvu+TZRl+EODyHOcck+GQ
      5sYGaZLgnCNLU0qVyqrHvxWWHgGmwyGDszOiYpFxf8DjL7+gc3REpdlk2OmwvrXFfDIlnk4p
      1apUfua6tPw2PM+j0Wp9uh+El9+2wuYmAFGhcLGhWLyx2W67pWuAs/eH5FnG+vY25drFlyqV
      ZpMkjinX66SLBUk8Z3h+ztnBe9IkudGhRX4rS48A1fUmg9NTRt0utXab+WRC98MxSRwDUFgr
      sv30KZ7ncX54RBLHhFoLyC2kNcBnTN8DXD/9M5yYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQEwLf3ynXlxju1Zb1SxyxXq5jOfcqse40/4HP+TucOMvr3IA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Title' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
